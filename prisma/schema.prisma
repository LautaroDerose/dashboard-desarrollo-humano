// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE2_URL")
}

model BenefitCategory {
  id        Int       @id @default(autoincrement())
  name      String
  benefits  Benefit[]
}

model Benefit {
  id                  Int       @id @default(autoincrement())
  name                String
  frequency           String
  quantity            Int?
  amount              Int?
  provider            String?
  status              String
  category            BenefitCategory?  @relation(fields: [categoryId], references: [id])
  categoryId          Int?
  recipients          Recipient[]       @relation("BenefitRecipient")
}

model Recipient {
  id              Int         @id @default(autoincrement())
  firstName       String
  lastName        String
  birthDate       DateTime
  dni             Int         @unique
  phone           Int
  email           String
  sex             String
  enrollmentDate  DateTime
  locality        Locality    @relation(fields: [localityId], references: [id])
  localityId      Int
  street          Street      @relation(fields: [streetId], references: [id])
  streetId        Int
  streetNumber    String
  familyGroup     FamilyGroup? @relation(fields: [familyGroupId], references: [id])
  familyGroupId   Int?
  riskFactors     RiskFactor[] 
  socialConditions SocialCondition[] 
  benefits        Benefit[]   @relation("BenefitRecipient")
}

model Locality {
  id      Int      @id @default(autoincrement())
  name    String
  streets Street[]
  recipients  Recipient[]
}

model Street {
  id          Int       @id @default(autoincrement())
  name        String
  locality    Locality  @relation(fields: [localityId], references: [id])
  localityId  Int
  recipients  Recipient[]
}

model RiskFactor {
  id          Int           @id @default(autoincrement())
  name        String
  gravity     String
  type        String
  recipients  Recipient[] @relation()
}

model SocialCondition {
  id          Int           @id @default(autoincrement())
  name        String
  gravity     String
  type        String
  recipients  Recipient[] @relation()
}

model FamilyGroup {
  id        Int       @id @default(autoincrement())
  familyName String?
  recipients Recipient[]
}


// -----------ORINIGAL MODELS ---------------------
// model BenefitCategory {
//   id        Int       @id @default(autoincrement())
//   name      String
//   benefits  Benefit[]
// }

// // Definición del modelo para los beneficios
// model Benefit {
//   id                  Int       @id @default(autoincrement())
//   name                String
//   type                String? //eliminar 
//   frequency           String
//   quantity            Int?
//   amount              Int?
//   provider            String?
//   status              String
//   category            BenefitCategory?  @relation(fields: [categoryId], references: [id])
//   categoryId          Int?
//   recipients          Recipient[]       @relation("BenefitRecipient")
// }

// // Definición del modelo para los beneficiarios
// model Recipient {
//   id              Int         @id @default(autoincrement())
//   firstName       String
//   lastName        String
//   birthDate       DateTime
//   dni             Int         @unique
//   phone           Int
//   email           String
//   sex             String
//   enrollmentDate  DateTime
//   locality        Locality    @relation(fields: [localityId], references: [id])
//   localityId      Int
//   street          Street      @relation(fields: [streetId], references: [id])
//   streetId        Int
//   streetNumber    String
//   familyGroup     FamilyGroup? @relation(fields: [familyGroupId], references: [id])
//   familyGroupId   Int?
//   riskFactors     RiskFactor[]
//   socialConditions SocialCondition[]
//   benefits        Benefit[]   @relation("BenefitRecipient")
// }

// // Definición del modelo para las localidades
// model Locality {
//   id      Int      @id @default(autoincrement())
//   name    String
//   streets Street[]
//   recipients  Recipient[]
// }

// // Definición del modelo para las calles
// model Street {
//   id          Int       @id @default(autoincrement())
//   name        String
//   locality    Locality  @relation(fields: [localityId], references: [id])
//   localityId  Int
//   recipients  Recipient[]
// }

// // Definición del modelo para los factores de riesgo
// model RiskFactor {
//   id          Int           @id @default(autoincrement())
//   name        String
//   gravity     String
//   type        String
//   recipients  Recipient[] 
// }

// // Definición del modelo para las condiciones sociales
// model SocialCondition {
//   id          Int           @id @default(autoincrement())
//   name        String
//   gravity     String
//   type        String
//   recipients  Recipient[]
// }

// // Definición del modelo para los grupos familiares
// model FamilyGroup {
//   id        Int       @id @default(autoincrement())
//   familyName String?
//   recipients Recipient[]
// }